plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.facebook.react'
}
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

project.ext.react = [
    enableHermes: true,  
]

def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+'

def enableHermes = project.ext.react.get("enableHermes", false);

def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion 33
    namespace "com.storefrontapp"

    defaultConfig {
        applicationId project.env.get("APP_IDENTIFIER")
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true 
        missingDimensionStrategy 'react-native-camera', 'general'
        versionCode project.env.get("ANDROID_VERSION_CODE")?.toInteger() ?: 1
        versionName project.env.get("ANDROID_VERSION_NAME") ?: "1.0.0"
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        compileSdkVersion 33    
    }
    configurations.all {
        resolutionStrategy {
            force 'androidx.core:core:1.10.0'
            force 'com.android.support:support-compat:27.1.1'
            force 'com.facebook.react:hermes-android:0.72.4'
        }
    }
    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}



dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.1.1')


    implementation 'com.google.firebase:firebase-analytics'


  
    implementation 'com.facebook.react:react-android'

   
    implementation project(':react-native-config')
    implementation "androidx.core:core-splashscreen:1.0.0-alpha02" 

    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.flipper'
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.flipper'
    }
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply plugin: 'com.google.gms.google-services'
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")   ; applyNativeModulesAppBuildGradle(project)
